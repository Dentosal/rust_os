---

name: CI
"on":
  push:
    paths-ignore:
      - 'docs/**'
      - 'dbgenv_config/**'
      - '**.md'
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  KERNEL_FEATURES: self-test
jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install APT packages
        run: |
          sudo apt-get update \
          && sudo apt-get install -y nasm binutils ninja-build

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rustfmt, clippy, rust-src

      - name: Install tooling
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: "Install pip packages"
        run: python3 -m pip install toml types-toml natsort mypy

      - name: Clone constcodegen
        uses: actions/checkout@v2
        with:
          repository: Dentosal/constcodegen
          path: ./constcodegen

      - uses: actions/cache@v2
        id: cache-constcodegen
        with:
          path: ~/.cargo/bin/constcodegen
          key: ${{ hashFiles('./constcodegen/Cargo.toml') }}-${{ hashFiles('./constcodegen/src/**') }}

      - name: Build constcodegen
        if: steps.cache-constcodegen.outputs.cache-hit != 'true'
        working-directory: ./constcodegen
        run: cargo install --path . --force

      - run: python3 -m mypy build_config/configure.py

      - run: python3 build_config/configure.py && ninja

      - name: Run cargo fmt --check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
